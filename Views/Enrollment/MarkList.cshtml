
@model StudentRegisteration.ViewModels.StudentMarksListViewModel

@{
    ViewData["Title"] = "Marks List";
}

<h1>MarkList</h1>

<form method="get" asp-action="MarkList">
    <div>
        <label for="courseName">Course Name</label>
        <select class="form-select" name="courseName" id="courseName">
            <option value="">All Courses</option>
            @foreach (var course in Model.FilterOptionsForMark.CourseNames)
            {
                <option value="@course" >@course</option>
            }
        </select>
    </div>
    <div>
        <label class="form-label" for="academicYear">Academic Year</label>
        <select class="form-select" name="academicYear" id="academicYear">
            <option value="">Select Academic Year</option>
            <option value="1st Year" selected="@("1st Year" == Model.FilterOptionsForMark.AcademicYear)">1st Year</option>
            <option value="2nd Year" selected="@("2nd Year" == Model.FilterOptionsForMark.AcademicYear)">2nd Year</option>
            <option value="3rd Year" selected="@("3rd Year" == Model.FilterOptionsForMark.AcademicYear)">3rd Year</option>  
        </select>
    </div>
    <div>
        <label for="semester">Semester</label>
        <select class="form-select" name="semester" id="semester">
            <option value="">Select Semester</option>
            <option value="FirstSemester" selected="@("FirstSemester" == Model.FilterOptionsForMark.Semester)">First Semester</option>  
            <option value="SecondSemester" selected="@("SecondSemester" == Model.FilterOptionsForMark.Semester)">Second Semester</option>   
        </select>
    </div>
    <div>
        <button class="btn btn-success" type="submit">Filter</button>
    </div>
</form>
<script>
    window.onload = function() {
        var courseSelect = document.getElementById("courseName");
        courseSelect.selectedIndex = 0; // Set the selected index to 0 ("All Courses")
        }
</script>

@if (!Model.StudentMarks.Any())
{
    <h2>No Marks Found</h2>
}
else
{
    <table class="table table-striped table-bordered">
        <thead>
            <tr>
                <th>Student Name</th>
                <th>Roll Number</th>
                <th>Academic Year</th>
                <th>Semester</th>
                <th>Course Name</th>
                <th>Mark</th>
                <th>Passed</th>
            </tr>
        </thead>
        <tbody>
            @if (string.IsNullOrEmpty(Model.FilterOptionsForMark.CourseName))
            {
                @foreach (var mark in Model.StudentMarks)
                {
                    <tr class="@GetRowClass(mark.MarkValue, mark.IsPassed)">
                        <td>@mark.StudentName</td>
                        <td>@mark.RollNumber</td>
                        <td>@mark.AcademicYear</td>
                        <td>@mark.Semester</td>
                        <td>@mark.CourseName</td>
                        <td>@(mark.MarkValue.HasValue ? mark.MarkValue.ToString() : "N/A")</td>
                        <td>@(mark.IsPassed.HasValue ? (mark.IsPassed.Value ? "Yes" : "No") : "N/A")</td>
                    </tr>
                }
            }
            else
            {
                @foreach (var mark in Model.StudentMarks.Where(m => m.CourseName == Model.FilterOptionsForMark.CourseName))
                {
                    <tr class="@GetRowClass(mark.MarkValue, mark.IsPassed)">
                        <td>@mark.StudentName</td>
                        <td>@mark.RollNumber</td>
                        <td>@mark.AcademicYear</td>
                        <td>@mark.Semester</td>
                        <td>@mark.CourseName</td>
                        <td>@(mark.MarkValue.HasValue ? mark.MarkValue.ToString() : "N/A")</td>
                        <td>@(mark.IsPassed.HasValue ? (mark.IsPassed.Value ? "Yes" : "No") : "N/A")</td>
                    </tr>
                }
            }
        </tbody>
    </table>

}

@*
use that for filter pagination
 href = "@UrlAction()" *@ 
<nav aria-label="Page navigation">
        <ul class="pagination justify-content-center">
            <li class="page-item @(Model.CurrentPage == 1 ? "disabled" : "")">
                <a class="page-link" href="@Url.Action("MarkList", new { page = 1, courseName = Model.FilterOptionsForMark.CourseName, academicYear = Model.FilterOptionsForMark.AcademicYear, semester = Model.FilterOptionsForMark.Semester })" aria-label="First">
                    <span aria-hidden="true">&laquo;&laquo;</span>
                </a>
            </li>
            <li class="page-item @(Model.CurrentPage == 1 ? "disabled" : "")">
                <a class="page-link" href="@Url.Action("MarkList", new { page = Model.CurrentPage - 1, courseName = Model.FilterOptionsForMark.CourseName, academicYear = Model.FilterOptionsForMark.AcademicYear, semester = Model.FilterOptionsForMark.Semester })" aria-label="Previous">
                    <span aria-hidden="true">&laquo;</span>
                </a>
            </li>
            @for (int i = 1; i <= Model.TotalPages; i++)
            {
                <li class="page-item @(i == Model.CurrentPage ? "active" : "")">
                    <a class="page-link" href="@Url.Action("MarkList", new { page = i, courseName = Model.FilterOptionsForMark.CourseName, academicYear = Model.FilterOptionsForMark.AcademicYear, semester = Model.FilterOptionsForMark.Semester })">@i</a>
                </li>
            }
            <li class="page-item @(Model.CurrentPage == Model.TotalPages ? "disabled" : "")">
                <a class="page-link" href="@Url.Action("MarkList", new { page = Model.CurrentPage + 1, courseName = Model.FilterOptionsForMark.CourseName, academicYear = Model.FilterOptionsForMark.AcademicYear, semester = Model.FilterOptionsForMark.Semester })" aria-label="Next">
                    <span aria-hidden="true">&raquo;</span>
                </a>
            </li>
            <li class="page-item @(Model.CurrentPage == Model.TotalPages ? "disabled" : "")">
                <a class="page-link" href="@Url.Action("MarkList", new { page = Model.TotalPages, courseName = Model.FilterOptionsForMark.CourseName, academicYear = Model.FilterOptionsForMark.AcademicYear, semester = Model.FilterOptionsForMark.Semester })" aria-label="Last">
                    <span aria-hidden="true">&raquo;&raquo;</span>
                </a>
            </li>
        </ul>
    </nav>

@functions {
    string GetRowClass(int? markValue, bool? isPassed)
    {
        if (markValue == null || isPassed == null)
        {
            return "table-warning"; // Use Bootstrap 5 Warning background color for rows with null values
        }
        else if (isPassed == true)
        {
            return "table-success"; // Use Bootstrap 5 Success (Green) background color for rows where IsPassed is true
        }
        else
        {
            return "table-danger"; // Use Bootstrap 5 Danger (Red) background color for rows where IsPassed is false
        }
    }
}